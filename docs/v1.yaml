openapi: 3.0.0
info:
  title: Payment API
  description: API for handling payments using Midtrans and fake payment validation
  version: 1.0.0
servers:
  - url: https://web-app-backend-git-development-aviaticks-projects.vercel.app/api/v1
  - url: http://localhost:3000/api/v1
tags:
  - name: Auth
    description: Authentication operations
  - name: Payments
    description: Payment operations
  - name: Bookings
    description: Booking operations
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
    google_oauth:
        type: oauth2
        description: Google OAuth
        flows:
          authorizationCode:
            authorizationUrl: https://accounts.google.com/o/oauth2/v2/auth
            tokenUrl: https://www.googleapis.com/oauth2/v4/token
            scopes:
              profile: View your basic profile info
              email: View your email address
  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
          example: 1
        fullName:
          type: string
          example: John
        familyName:
          type: string
          example: Doe
        phoneNumber:
          type: string
          example: +621234567890
        email:
          type: string
          example: kibowole@gmail.com
        identityType:
          type: string
          example: kibowole@gmail.com
        identityNumber:
          type: string
          example: kibowole@gmail.com
        nationality:
          type: string
          example: Indonesia
        emailIsVerified:
          type: boolean
          example: true
        googleId:
          example: ~
        role:
          type: string
          example: USER
    Booking:
      type: object
      properties:
        id:
          type: integer
          example: 3
        flight_id:
          type: integer
          example: 1
        booking_code:
          type: string
          example: "1E63B67630"
        seat_class:
          type: string
          example: "Economy"
        total_passengers:
          type: integer
          example: 3
        total_price:
          type: number
          example: 6600000
        bookingTax:
          type: number
          example: 600000
        status:
          type: string
          example: "UNPAID"
        paid_before:
          type: string
          format: date-time
          example: "2024-05-30T16:38:51.927Z"
        created_at:
          type: string
          format: date-time
          example: "2024-06-01T12:30:00.000Z"
    Passenger:
      type: object
      properties:
        title:
          type: string
          example: "Mr."
        fullName:
          type: string
          example: "John Doe"
        familyName:
          type: string
          example: "Doe"
        birthDate:
          type: string
          format: date-time
          example: "1980-01-01T00:00:00.000Z"
        nationality:
          type: string
          example: "USA"
        identityType:
          type: string
          example: "Passport"
        issuingCountry:
          type: string
          example: "USA"
        identityNumber:
          type: string
          example: "123456789"
        expiredDate:
          type: string
          format: date-time
          example: "2025-01-01T00:00:00.000Z"
        ageGroup:
          type: string
          example: "ADULT"
  requestBodies:
    LoginUser:
      content:
        application/json:
          schema:
            type: object
            properties:
              emailOrPhoneNumber:
                type: string
                example: john.doe@gmail.com
              password:
                type: string
                example: 123456
    NewBooking:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              userId:
                type: integer
                example: 1
              flightId:
                type: integer
                example: 1
              adult:
                type: integer
                example: 2
              child:
                type: integer
                example: 0
              baby:
                type: integer
                example: 1
              seatClass:
                type: string
                example: "Economy"
              passenger:
                type: array
                items:
                  $ref: '#/components/schemas/Passenger'

paths:
  /auth/login:
    post:
      tags:
        - Auth
      summary: Login user
      requestBody:
        required: true
        $ref: "#/components/requestBodies/LoginUser"
      responses:
        '200':
          description: User logged in successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: Login Successfully
                  data:
                    type: object
                    properties:
                      user:
                        allOf:
                          - $ref: "#/components/schemas/User"
                          - type: object
                            properties:
                              token:
                                type: string
                                example: 2304b11f-fd1f-425e-b481-ced5e3f349c6
        '400':
          description: Invalid email or password
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: Invalid email or password
                  data:
                    example: ~
        '401':
          description: Authentication failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: Authentication failed. Please use Google OAuth to log in
                  data:
                    example: ~
        '403':
          description: Email not verified
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: Your account is not verified
                  data:
                    example: ~
  /auth/google:
    get:
      tags:
        - Auth
      operationId: get-login-user-with-google
      summary: Initiate Google OAuth 2.0 Authentication
      description: Redirects the user to Google for authentication.
      security:
        - google_oauth: []
      responses:
        "302":
          description: Redirect to Google for authentication.

  /users/google/callback:
    get:
      tags:
        - Auth
      operationId: get-login-user-with-google-callback
      summary: Google OAuth 2.0 Callback
      description: Handles the callback after successful Google authentication.
      parameters:
        - name: code
          in: query
          required: true
          description: Authorization code received from Google.
          schema:
            type: string
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      status:
                        type: boolean
                        example: true
                      message:
                        type: string
                        example: "success"
                  - type: object
                    properties:
                      err:
                        type: string
                        example: null
                      data:
                        type: object
                        properties:
                          user:
                            allOf:
                              - $ref: "#/components/schemas/User"
                              - type: object
                          token:
                              type: integer
                              example: 2304b11f-fd1f-425e-b481-ced5e3f349c6
  /payments/midtrans/token/{bookingId}:
    post:
      tags:
        - Payments
      summary: Create a payment token using Midtrans
      parameters:
        - name: bookingId
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                paymentMethod:
                  type: string
                  example: credit_card
      responses:
        '200':
          description: Token retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                  message:
                    type: string
                    example: Token retrieved successfully
                  data:
                    type: object
                    properties:
                      token:
                        type: string
                        example: 2304b11f-fd1f-425e-b481-ced5e3f349c6
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: Invalid booking ID
                  data:
                    example: ~
        '404':
          description: Booking not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: Booking Not Found With Id 100
                  data:
                    example: ~
        '500':
          description: Server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: Server error during token creation
                  data:
                    example: ~

  /payments/midtrans/confirm:
    post:
      tags:
        - Payments
      summary: Confirm payment using Midtrans
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                order_id:
                  type: string
                  example: 'BOOKING-1-123456789'
                transaction_id:
                  type: string
                  example: 'TRANS123'
                transaction_status:
                  type: string
                  example: 'capture'
                gross_amount:
                  type: number
                  example: 100000
                payment_type:
                  type: string
                  example: 'credit_card'
      responses:
        '200':
          description: Payment confirmed and booking status updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                  message:
                    type: string
                    example: Payment confirmed and booking status updated successfully
                  data:
                    type: object
                    properties:
                      newPaymentId:
                        type: integer
                        example: 1
                      updatedBookingId:
                        type: integer
                        example: 1
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "Transaction is not successful. Status: pending"
        '500':
          description: Server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: Server error during payment confirmation
                  data:
                    example: ~
  /bookings/new-booking:
    post:
      summary: Create a new booking
      tags: 
        - Bookings
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: integer
                  example: 1
                flightId:
                  type: integer
                  example: 1
                adult:
                  type: integer
                  example: 2
                child:
                  type: integer
                  example: 0
                baby:
                  type: integer
                  example: 1
                seatClass:
                  type: string
                  example: "Economy"
                passenger:
                  type: array
                  items:
                    $ref: "#/components/schemas/Passenger"
      responses:
        200:
          description: Successfully created booking
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 'Success creating new Booking'
                  data:
                    $ref: "#/components/schemas/Booking"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "Can't find user with id 1"
                  data:
                    type: object
                    nullable: true
                    example: null

  /bookings/booking-history:
    get:
      summary: Get all bookings for a user with filter
      tags:
        - Bookings
      parameters:
        - in: query
          name: userId
          schema:
            type: integer
          required: false
          description: ID of the user
        - in: query
          name: search
          schema:
            type: string
          description: Kode booking yang dicari
          example: 6D38CA7BC0
        - in: query
          name: date
          schema:
            type: string
            format: date
          description: Tanggal dibuatnya booking
          example: 2024-06-03
      responses:
        200:
          description: Successfully retrieved booking history
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 'Success getting booking history'
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 3
                        date:
                          type: string
                          format: date-time
                          example: "2024-06-01T08:00:00.000Z"
                        status:
                          type: string
                          example: "PAID"
                        booking_code:
                          type: string
                          example: "1E63B67630"
                        paid_before:
                          type: string
                          format: date-time
                          example: "2024-05-30T16:38:51.927Z"
                        price:
                          type: number
                          example: 6600000
                        flight_detail:
                          type: object
                          properties:
                            departure_city:
                              type: string
                              example: "New York"
                            arrival_city:
                              type: string
                              example: "Los Angeles"
                            departure_time:
                              type: string
                              format: date-time
                              example: "2024-06-01T08:00:00.000Z"
                            arrival_time:
                              type: string
                              format: date-time
                              example: "2024-06-01T12:00:00.000Z"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "Invalid date format"
                  data:
                    type: object
                    nullable: true
                    example: null

  /bookings/booking-history/{bookingId}:
    get:
      summary: Get booking details
      tags:
        - Bookings
      parameters:
        - in: path
          name: bookingId
          schema:
            type: integer
          required: true
          description: ID of the booking
      responses:
        200:
          description: Successfully retrieved booking detail
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 'Success getting booking detail'
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 3
                      booking_code:
                        type: string
                        example: "1E63B67630"
                      status:
                        type: string
                        example: "PAID"
                      paid_before:
                        type: string
                        format: date-time
                        example: "2024-05-30T16:38:51.927Z"
                      flight_detail:
                        type: object
                        properties:
                          departure_city:
                            type: string
                            example: "New York"
                          arrival_city:
                            type: string
                            example: "Los Angeles"
                          departure_time:
                            type: string
                            format: date-time
                            example: "2024-06-01T08:00:00.000Z"
                          arrival_time:
                            type: string
                            format: date-time
                            example: "2024-06-01T12:00:00.000Z"
                      passengers:
                        type: array
                        properties:
                          title:
                            type: string
                            example: "Mr"
                          fullname:
                            type: string
                            example: "John Doe"
                          ktp:
                            type: string
                            example: "1234567890"
                        example:
                          - title: "Mr"
                            fullname: "John Doe"
                            ktp: "1234567890"
                          - title: "Mrs"
                            fullname: "Jane Doe"
                            ktp: "0987654321"
                          - title: "Baby"
                            fullname: "Baby Doe"
                            ktp: "5432109876"
                      price_detail:
                        type: object
                        properties:
                          total_price:
                            type: number
                            example: 6600000
                          tax:
                            type: number
                            example: 600000
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "Can't find user with id 2"
                  data:
                    type: object
                    nullable: true
                    example: null
        404:
          description: Booking not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "Booking with id 3 not found"
                  data:
                    type: object
                    nullable: true
                    example: null
  /payments/payment/{bookingId}:
    post:
      tags:
        - Payments
      summary: Validate payment with credit card 
      parameters:
        - name: bookingId
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                paymentMethod:
                  type: string
                  example: credit_card
                cardNumber:
                  type: string
                  example: 4515678901234
                cardHolderName:
                  type: string
                  example: John Doe
                cvv:
                  type: string
                  example: 123
                expiryDate:
                  type: string
                  example: 12/24
      responses:
        '200':
          description: Payment validated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                  message:
                    type: string
                    example: Credit card payment validated successfully
                  data:
                    type: object
                    properties:
                      booking:
                        type: object
                        properties:
                          id:
                            type: integer
                            example: 1
                          bookingCode:
                            type: string
                            example: "C8D3543BB0"
                          status:
                            type: string
                            example: "PAID"
                          expiredPaid:
                            type: string
                            format: date-time
                            example: "2024-05-28T15:34:29.303Z"
                          totalPrice:
                            type: number
                            example: 11550000
                          flightId:
                            type: integer
                            example: 5
                          userId:
                            type: integer
                            example: 1
                      payment:
                        type: object
                        properties:
                          id:
                            type: integer
                            example: 1
                          name:
                            type: string
                            example: "credit_card"
                          paidAt:
                            type: string
                            format: date-time
                            example: "2024-05-28T14:35:04.298Z"
                          bookingId:
                            type: integer
                            example: 1
        '400':
          description: Invalid Booking ID
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: Invalid booking ID
                  data:
                    example: ~
        '404':
          description: Booking not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: Booking not found
                  data:
                    example: ~
        '500':
          description: Server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: Server error during payment validation
                  data:
                    example: ~

